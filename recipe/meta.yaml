{% set name = "conda-pypi" %}
{% set version = "0.2.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/conda_pypi-{{ version }}.tar.gz
  sha256: c2854faddda313994f01160a19dbfee47639de8836aac449d952a4bfce99c4b9

build:
  skip: true  # [py<38]
  # can't be noarch because we can't place EXTERNALLY-MANAGED in stdlib (first level is site-packages)
  number: 0
  script:
    - set -x  # [unix]
    - "@ECHO ON"  # [win]
    - {{ PYTHON }} -m pip install . --no-deps --no-build-isolation -vv
    - {{ PYTHON }} -c "from conda_pypi.python_paths import ensure_externally_managed; ensure_externally_managed()"

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
  host:
    - python
    - pip
    - hatchling >=1.12.2
    - hatch-vcs >=0.2.0
    - importlib_resources  # [py<39]
  run:
    - python
    - conda >=23.9.0
    - pip >=23.0.1
    - grayskull
    - importlib_resources  # [py<39]
    - packaging

test:
  imports:
    - conda_pypi
    - conda_pypi.main
  commands:
    - conda pip --help
    - python -c "from conda_pypi.python_paths import get_env_stdlib; assert (get_env_stdlib() / 'EXTERNALLY-MANAGED').exists()"
    - pip install requests && exit 1 || exit 0

about:
  home: https://github.com/conda-incubator/conda-pypi
  license: MIT
  license_file: LICENSE
  summary: Better PyPI interoperability for the conda ecosystem
  dev_url: https://github.com/conda-incubator/conda-pypi
  doc_url: https://conda-incubator.github.io/conda-pypi

extra:
  recipe-maintainers:
    - jaimergp
    - jezdez
